{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Desktop\\\\codenation_react_1\\\\react-1\\\\src\\\\components\\\\RecipeItem.js\";\nimport React from 'react';\nimport { slugify } from '../helpers';\n\nconst highlight = (text, highlight) => {\n  if (text !== null && text !== '' && typeof text !== 'undefined') {\n    let regex = new RegExp(\"(\".concat(highlight, \")\"), 'gi');\n    let parts = text.split(regex);\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, parts.map((part, index) => {\n      if (part.toLowerCase() === highlight) {\n        return React.createElement(\"mark\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, part);\n      }\n\n      return part;\n    }));\n  }\n};\n\nconst RecipeItem = props => React.createElement(\"div\", {\n  className: \"col-sm-3 mt-4\",\n  onClick: () => props.onClick(slugify(props.title)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"card\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"card-img-top img-fluid\",\n  src: props.thumbnail,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"card-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"h5\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, highlight(props.title, props.highlight)), React.createElement(\"p\", {\n  className: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"Ingredients: \"), highlight(props.ingredients, props.highlight)))));\n\nexport default RecipeItem;","map":{"version":3,"sources":["C:\\Users\\Rafael\\Desktop\\codenation_react_1\\react-1\\src\\components\\RecipeItem.js"],"names":["React","slugify","highlight","text","regex","RegExp","parts","split","map","part","index","toLowerCase","RecipeItem","props","onClick","title","thumbnail","ingredients"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAGA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOD,SAAP,KAAqB;AACnC,MAAKC,IAAI,KAAK,IAAV,IAAoBA,IAAI,KAAK,EAA7B,IAAqC,OAAOA,IAAP,KAAgB,WAAzD,EAAuE;AACnE,QAAIC,KAAK,GAAG,IAAIC,MAAJ,YAAeH,SAAf,QAA6B,IAA7B,CAAZ;AACA,QAAII,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAWH,KAAX,CAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQE,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACrC,UAAID,IAAI,CAACE,WAAL,OAAuBT,SAA3B,EAAsC;AAClC,eAAO;AAAM,UAAA,GAAG,EAAEQ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBD,IAAnB,CAAP;AACH;;AACD,aAAOA,IAAP;AACH,KALc,CAAR,CAAP;AAOH;AACJ,CAZD;;AAcA,MAAMG,UAAU,GAAIC,KAAD,IAEf;AAAK,EAAA,SAAS,EAAC,eAAf;AAA+B,EAAA,OAAO,EAAE,MAAMA,KAAK,CAACC,OAAN,CAAcb,OAAO,CAACY,KAAK,CAACE,KAAP,CAArB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAwC,EAAA,GAAG,EAAEF,KAAK,CAACG,SAAnD;AAA8D,EAAA,GAAG,EAAC,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAI,EAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4Bd,SAAS,CAACW,KAAK,CAACE,KAAP,EAAcF,KAAK,CAACX,SAApB,CAArC,CADJ,EAEI;AAAG,EAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EACmCA,SAAS,CAACW,KAAK,CAACI,WAAP,EAAoBJ,KAAK,CAACX,SAA1B,CAD5C,CAFJ,CAFJ,CADJ,CAFJ;;AAcA,eAAeU,UAAf","sourcesContent":["import React from 'react'\nimport { slugify } from '../helpers';\n\n\nconst highlight = (text, highlight) => {\n    if ((text !== null) && (text !== '') && (typeof text !== 'undefined'))\t{\n        let regex = new RegExp(`(${highlight})`, 'gi');\n        let parts = text.split(regex);\n        return <span>{ parts.map((part,index) => {\n            if (part.toLowerCase() === highlight) {\n                return <mark key={index}>{part}</mark>\n            }\n            return part;\n        })\n        }</span>\n    }\n};\n\nconst RecipeItem = (props) => (\n\n    <div className=\"col-sm-3 mt-4\" onClick={() => props.onClick(slugify(props.title))}>\n        <div className=\"card\">\n            <img className=\"card-img-top img-fluid\" src={props.thumbnail} alt=\"\" />\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{highlight(props.title, props.highlight)}</h5>\n                <p className=\"card-text\">\n                    <strong>Ingredients: </strong>{highlight(props.ingredients, props.highlight)}\n                </p>\n            </div>\n        </div>\n    </div>\n);\nexport default RecipeItem;\n"]},"metadata":{},"sourceType":"module"}